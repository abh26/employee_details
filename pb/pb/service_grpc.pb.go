// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ListEmployeeRecordService_ListEmployeeRecords_FullMethodName = "/ListEmployeeRecordService/ListEmployeeRecords"
)

// ListEmployeeRecordServiceClient is the client API for ListEmployeeRecordService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ListEmployeeRecordServiceClient interface {
	ListEmployeeRecords(ctx context.Context, in *EmployeeRecordsRequest, opts ...grpc.CallOption) (*EmployeeRecordsResponse, error)
}

type listEmployeeRecordServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewListEmployeeRecordServiceClient(cc grpc.ClientConnInterface) ListEmployeeRecordServiceClient {
	return &listEmployeeRecordServiceClient{cc}
}

func (c *listEmployeeRecordServiceClient) ListEmployeeRecords(ctx context.Context, in *EmployeeRecordsRequest, opts ...grpc.CallOption) (*EmployeeRecordsResponse, error) {
	out := new(EmployeeRecordsResponse)
	err := c.cc.Invoke(ctx, ListEmployeeRecordService_ListEmployeeRecords_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListEmployeeRecordServiceServer is the server API for ListEmployeeRecordService service.
// All implementations must embed UnimplementedListEmployeeRecordServiceServer
// for forward compatibility
type ListEmployeeRecordServiceServer interface {
	ListEmployeeRecords(context.Context, *EmployeeRecordsRequest) (*EmployeeRecordsResponse, error)
	mustEmbedUnimplementedListEmployeeRecordServiceServer()
}

// UnimplementedListEmployeeRecordServiceServer must be embedded to have forward compatible implementations.
type UnimplementedListEmployeeRecordServiceServer struct {
}

func (UnimplementedListEmployeeRecordServiceServer) ListEmployeeRecords(context.Context, *EmployeeRecordsRequest) (*EmployeeRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEmployeeRecords not implemented")
}
func (UnimplementedListEmployeeRecordServiceServer) mustEmbedUnimplementedListEmployeeRecordServiceServer() {
}

// UnsafeListEmployeeRecordServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ListEmployeeRecordServiceServer will
// result in compilation errors.
type UnsafeListEmployeeRecordServiceServer interface {
	mustEmbedUnimplementedListEmployeeRecordServiceServer()
}

func RegisterListEmployeeRecordServiceServer(s grpc.ServiceRegistrar, srv ListEmployeeRecordServiceServer) {
	s.RegisterService(&ListEmployeeRecordService_ServiceDesc, srv)
}

func _ListEmployeeRecordService_ListEmployeeRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListEmployeeRecordServiceServer).ListEmployeeRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListEmployeeRecordService_ListEmployeeRecords_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListEmployeeRecordServiceServer).ListEmployeeRecords(ctx, req.(*EmployeeRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ListEmployeeRecordService_ServiceDesc is the grpc.ServiceDesc for ListEmployeeRecordService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ListEmployeeRecordService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ListEmployeeRecordService",
	HandlerType: (*ListEmployeeRecordServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListEmployeeRecords",
			Handler:    _ListEmployeeRecordService_ListEmployeeRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
